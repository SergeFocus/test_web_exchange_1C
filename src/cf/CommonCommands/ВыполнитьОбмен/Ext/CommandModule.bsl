&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	Если ВыполнитьСинхронизациюНаСервере() Тогда
		Сообщить("Синхронизация прошла успешно!");
	Иначе
		Сообщить("При синхронизации были ошибки!");
	КонецЕсли;
КонецПроцедуры

//Выгрузка изменений на клиент
&НаСервере
Функция ВыполнитьСинхронизациюНаСервере()
	
	Попытка                
		
		ВСОпределение = Новый WSОпределения(Константы.АдреснаяСтрокаВебСервиса.Получить());      //"DataTrasfer"
		ВСервис = ВСОпределение.Сервисы.Получить("DataTrasfer", "ОбменДанными"); 
		ВТочкаВхода = ВСервис.ТочкиПодключения.Получить("ОбменДаннымиSoap"); 
		ВОперация = ВТочкаВхода.Интерфейс.Операции.Получить("ВыполнитьОбмен");
		Данные = Новый ХранилищеЗначения(ПланыОбмена.ПланОбмена.ЭтотУзел().Код, Новый СжатиеДанных(9));
		ДанныеXDTO = ВСОпределение.ФабрикаXDTO.Создать(ВОперация.Параметры.Получить("Данные").Тип, Данные);
		ВСПрокси = Новый WSПрокси(ВСОпределение, "DataTrasfer", "ОбменДанными", "ОбменДаннымиSoap") ;
		Ответ = ВСПрокси.ВыполнитьОбмен(ДанныеXDTO);
		СтрокаОтвета = Ответ.Получить();
		Если НЕ СтрокаОтвета = "" Тогда 
			ПринятьИзменениеПоПлану(СтрокаОтвета);
		КонецЕсли;
		
		Возврат Истина
		
	Исключение
		
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
		
	КонецПопытки;
КонецФункции


//Загрузка данных на клиенте

Процедура ПринятьИзменениеПоПлану(СтрокаСообщения)
	ЧтениеХМЛ = Новый ЧтениеXML;
	ЧтениеХМЛ.УстановитьСтроку(СтрокаСообщения);
	ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения(); 
	ЧтениеСообщения.НачатьЧтение(ЧтениеХМЛ);
	
	Пока ВозможностьЧтенияXML(ЧтениеХМЛ) Цикл
		
		Данные = ПрочитатьXML(ЧтениеСообщения.ЧтениеXML);
		
		Если Не Данные = Неопределено Тогда
			
			Данные.ОбменДанными.Отправитель = ЧтениеСообщения.Отправитель; 
			Данные.ОбменДанными.Загрузка = Истина;
			Данные.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЧтениеСообщения.ЗакончитьЧтение();
	
КонецПроцедуры
